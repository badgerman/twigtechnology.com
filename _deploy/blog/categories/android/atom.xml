<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Twig Technology]]></title>
  <link href="http://www.twigtechnology.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://www.twigtechnology.com/"/>
  <updated>2014-04-11T07:44:23+02:00</updated>
  <id>http://www.twigtechnology.com/</id>
  <author>
    <name><![CDATA[Enno Rehling]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[E-Mail Encryption]]></title>
    <link href="http://www.twigtechnology.com/blog/2013/12/24/email-encryption/"/>
    <updated>2013-12-24T11:00:00+01:00</updated>
    <id>http://www.twigtechnology.com/blog/2013/12/24/email-encryption</id>
    <content type="html"><![CDATA[<p>Here is a depressing thought: public-key encryption was around when I was in
college in the mid-90&rsquo;s, and it&rsquo;s still not widely adopted. Instead, it&rsquo;s
considered &ldquo;too complicated for regular users&rdquo;, and none of the major vendors
of email solutions has made an attempt to integrate encryption into their
software.</p>

<p>As long as the NSA and Google read every one of my emails, I want to have a way
of preserving my privacy. I&rsquo;m writing these instructions in the hope that some
of the people I communicate will find it easier to use encryption when
communicating with me.</p>

<!-- more -->


<h2>Using GnuPG with Thunderbird</h2>

<p>PGP, or &ldquo;Pretty Good Privacy&rdquo;, is a standard for email encryption developed in
1991, and remains the de-facto standard until today. The most popular
implementation of the PGP standard is the Gnu Privacy Guard (commonly
abbreviated as GnuPG or GPG). On your computer, you will need to install a <a href="http://www.gnupg.org/">GnuPG download</a> that matches your operating system.</p>

<p>To integrate GnuPG into Thunderbird, you will need to install the <a href="https://www.enigmail.net/">Enigmail extension</a>.</p>

<h2>Using APG on Android</h2>

<p>On Android, PGP is implemented in the <a href="https://play.google.com/store/apps/details?id=org.thialfihar.android.apg">APG App</a> that I mentioned in my previous posting.</p>

<h2>Inline PGP vs. PGP/MIME</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gmail With K-9, and an Identity Change]]></title>
    <link href="http://www.twigtechnology.com/blog/2013/12/23/using-gmail-with-k9/"/>
    <updated>2013-12-23T20:30:00+01:00</updated>
    <id>http://www.twigtechnology.com/blog/2013/12/23/using-gmail-with-k9</id>
    <content type="html"><![CDATA[<p>In my previous article, I described how to set up Thunderbird for use with your
Gmail account. That solves my annoyances with the Gmail web interface, and
allows me to use PGP encryption in my emails, something I&rsquo;ll probably write a
post about later. However, I also have a series Android devices on which I also
read email, and the Gmail app on them has a few of the same problems, namely the
lack of encryption. How much does the NSA pay the major vendors so they don&rsquo;t
implement this, and make it harder on us?</p>

<p>In this article, I&rsquo;ll show you how to set up the free K-9 Mail app, and add
a new identity to it, so we can prepare our eventual exit from Gmail altogether.
You may not choose to do that yet, but I did.</p>

<!-- more -->


<h2>Send in the K-9 team</h2>

<p>Before you install K-9, you should <a href="https://play.google.com/store/apps/details?id=org.thialfihar.android.apg">install
APG</a>.
It provides PGP encryption for Android, and for reasons I&rsquo;ve never understood,
K-9 insists that it be installed first if you want to use both of them together.
For now, forget that you did that, I&rsquo;m going to deal with encryption in a later
posting.</p>

<p>After that, install the K-9 Mail application on our phone. Get it from
<a href="https://play.google.com/store/apps/details?id=com.fsck.k9">Google&rsquo;s Store</a>, or
Market, or whatever your phone calls it. These app are very undemanding, and
I&rsquo;ve installed them on anything from an old Froyo phone to the latest KitKat
tablet.</p>

<p>After you&rsquo;ve installed K-9, you&rsquo;ll have to configure it to use your Gmail
account. As with Thunderbird, you will need to create another
<a href="https://support.google.com/accounts/answer/185833">application-specific
password</a> for this if you are
using two-factor authentication. You want to use a different one, so that if you
ever lose your phone, you can just revoke the password that it used and cut off
access to your email.</p>

<p>From the menu, choose &ldquo;add account&rdquo;, enter your full email address and the
password, and let the app find the incoming and outgoing server settings for
you. Just like with Thunderbird, this should happen automatically, so no
memorizing of host names or ports required. When all is done, you&rsquo;re prompted for
a name for the account and your own name, and taken to the account view. By
default, your account will be set up to not poll the inbox repeatedly, so you
might want to change the folder poll frequency in the settings to something like
every 15 minutes. Take a look around all the settings and consider what you want
your phone to be doing.</p>

<h2>New Identity</h2>

<p>I&rsquo;m ultimately trying to get out of Gmail entirely, and I have a domain that&rsquo;s
hosted at netbeat with a catch-all email account on their POP3 mail server. It
would be cool if I could slowly migrate to an email address on that domain, but
I don&rsquo;t have the patience to set up my own IMAP server for it yet.</p>

<p>First step in this is to configure Gmail to fetch the emails from that domain.
I&rsquo;ve been doing this for a while now, and even though it means Google gets even
more data about me, it was worth it for their superior spam filtering.
Instruction on how to set up Gmail&rsquo;s Mail Fetcher can be found in Google&rsquo;s
support pages: <a href="https://support.google.com/mail/answer/21289">Centralize mail from different accounts with Mail
Fetcher</a>.</p>

<p>The one disadvantage of this setup is that email now takes longer to be
delivered, because on top of K-9&rsquo;s polling frequency, each message now has to
first go to my domain host&rsquo;s servers, and then gets picked up by Gmail on a
regular schedule (up to an hour), so you should take that article&rsquo;s advice
and set up direct forwarding, too. How you do that differs based on your domain
host, so you&rsquo;re on your own there. When I did it, it caused my emails to arrive
almost instantly.</p>

<p>Secondly, you&rsquo;ll want to be able to send emails through Google&rsquo;s servers from
your new email address. Again, this is documented in the Google support pages:
<a href="https://support.google.com/mail/answer/22370">Sending mail from a different
address</a></p>

<p>Once this works, you should have a drop-down in Gmail&rsquo;s web interface that lets
you choose which identity you want to send email from. By using your new
identity, you are slowly training everyone you communicate with that you&rsquo;ve got
a new address &ndash; the address will get collected into their address books. their
replies will be sent to it, etc. You may also want to add a signature to your
emails that explains your new address. Just make sure not to tell the spammers
:&ndash;)</p>

<p>Back to K-9: In the account settings, under &ldquo;Sending mail&rdquo;, select &ldquo;Manage
Identities&rdquo;, and from the menu choose &ldquo;New Identity&rdquo; to add your alternate email
address. Then long-press on the newly created identity and choose &ldquo;Move to top /
make default&rdquo;. K-9 will use this identity for all new messages, but in replies,
it will default to whatever address the email went to, and not switch. Don&rsquo;t
worry if that&rsquo;s confusing, you can always change whatever identity it chooses
from a drop-down at the top of the composition screen, for any message you
write.</p>

<p>Thunderbird has a similar mechanism for multiple identities, and you might want
to set it up there, too. Rather than describe it here, I&rsquo;ll just link the
<a href="http://kb.mozillazine.org/Mozilla_Suite_:_FAQs_:_Mail_Aliases">Mozilla Knowledge
Base</a> and hope
you&rsquo;ll figure it out for yourself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bittorrent Sync on Android]]></title>
    <link href="http://www.twigtechnology.com/blog/2013/05/15/btsync-on-android/"/>
    <updated>2013-05-15T17:47:00+02:00</updated>
    <id>http://www.twigtechnology.com/blog/2013/05/15/btsync-on-android</id>
    <content type="html"><![CDATA[<p>In <a href="http://www.twigtechnology.com/blog/2013/05/14/i-heart-btsync/">my previous blog post</a>,
I raved about how much I love Bittorrent Sync (BTSync). And while it
is true that for most of my use-cases, it is superior to Dropbox,
there are a few things Dropbox does that BTSync doesn&rsquo;t do out of the
box. Two of these use-cases are related to mobile devices: I want to share
folders with my phone, and synchronize photos taken with the phone to my PC.</p>

<!-- more -->


<h2>Sharing Folders with my Phone</h2>

<p>There are <a href="https://matt.bionicmessage.net/blog/2013/04/27/Running%20BitTorrent%20Sync%20on%20your%20(rooted)%20Android%20device">inofficial ways</a>
of getting btsync to run on Android devices, but I&rsquo;m trying to solve
this problem without rooting the phone, and anyhow, the bittorrent
protocol would be insane to run on my data plan. My current solution is
a hybrid: I am creating a <em>Phone</em> folder in my Dropbox that gets synced
with my phone through the Dropbox app. This obviously means that a copy
has to live in the cloud, and I lose the security benefits I just gained.
Then I add that folder on my PC&rsquo;s Dropbox to the folders synchronized
with BTSync to share it across all my PCs, and anything I drop into
the folder on any PC, even one that does not have Dropbox installed,
is transferred to the phone.</p>

<p>In my setup, I have a Desktop PC that is (almost) always on, a Laptop
that doesn&rsquo;t have Dropbox installed, and an Android phone running the
Dropbox app. This is what is going on:
<img class="left" src="/images/btsyncdb.png" width="594" height="514"></p>

<h2>Synchronizing new Photos to my PC</h2>

<p>This is almost exactly the inverse problem, and has the same solution:
When I take a picture on my phone, the Dropbox app has an option to
automatically add that picture to a &ldquo;Camera Uploads&rdquo; folder. This is
of course synchronized with the dropbox servers in the cloud and my
Desktop PC, where I share the Camera Uploads folder through BTSync,
and that way, I get it on my Laptop, too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NDK Shared Libraries]]></title>
    <link href="http://www.twigtechnology.com/blog/2012/02/26/android-ndk-shared-libraries/"/>
    <updated>2012-02-26T23:11:00+01:00</updated>
    <id>http://www.twigtechnology.com/blog/2012/02/26/android-ndk-shared-libraries</id>
    <content type="html"><![CDATA[<p>This morning, I got stumped by the Java/NDK integration. I was trying to add
another shared library (Lua) to a project, and kept getting these dynamic linker
error messages:</p>

<pre><code>I/ActivityManager( 1386): Start proc org.libsdl.app for activity org.libsdl.app/.SDLActivity: pid=25826 uid=10087 gids={1015}
W/dalvikvm(25826): Exception Ljava/lang/UnsatisfiedLinkError; thrown during Lorg/libsdl/app/SDLActivity;.&amp;lt;clinit&amp;gt;
W/dalvikvm(25826): Class init failed in newInstance call (Lorg/libsdl/app/SDLActivity;)
W/dalvikvm(25826): threadid=1: thread exiting with uncaught exception (group=0x40020ac0)
E/AndroidRuntime(25826): FATAL EXCEPTION: main
E/AndroidRuntime(25826): java.lang.ExceptionInInitializerError
E/AndroidRuntime(25826):        at java.lang.Class.newInstanceImpl(Native Method)
E/AndroidRuntime(25826):        at java.lang.Class.newInstance(Class.java:1429)
E/AndroidRuntime(25826):        at android.app.Instrumentation.newActivity(Instrumentation.java:1021)
E/AndroidRuntime(25826):        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2577)
E/AndroidRuntime(25826):        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2679)
E/AndroidRuntime(25826):        at android.app.ActivityThread.access$2300(ActivityThread.java:125)
E/AndroidRuntime(25826):        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2033)
E/AndroidRuntime(25826):        at android.os.Handler.dispatchMessage(Handler.java:99)
E/AndroidRuntime(25826):        at android.os.Looper.loop(Looper.java:123)
E/AndroidRuntime(25826):        at android.app.ActivityThread.main(ActivityThread.java:4627)
E/AndroidRuntime(25826):        at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(25826):        at java.lang.reflect.Method.invoke(Method.java:521)
E/AndroidRuntime(25826):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:868)
E/AndroidRuntime(25826):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:626)
E/AndroidRuntime(25826):        at dalvik.system.NativeStart.main(Native Method)
E/AndroidRuntime(25826): Caused by: java.lang.UnsatisfiedLinkError: Library main not found
E/AndroidRuntime(25826):        at java.lang.Runtime.loadLibrary(Runtime.java:461)
E/AndroidRuntime(25826):        at java.lang.System.loadLibrary(System.java:557)
E/AndroidRuntime(25826):        at org.libsdl.app.SDLActivity.&amp;lt;clinit&amp;gt;(SDLActivity.java:53)
E/AndroidRuntime(25826):        ... 15 more
W/ActivityManager( 1386):   Force finishing activity org.libsdl.app/.SDLActivity
</code></pre>

<p>What it was was that my Activity (which is a small java stub) needed to call
System.loadLibrary(&ldquo;Lua&rdquo;); to load that new library. How is that related to the
error message? I have no idea.</p>

<p>Sigh. Sometimes missing a single line will cost you half a day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SDL on Android]]></title>
    <link href="http://www.twigtechnology.com/blog/2012/02/20/sdl-on-android/"/>
    <updated>2012-02-20T22:00:00+01:00</updated>
    <id>http://www.twigtechnology.com/blog/2012/02/20/sdl-on-android</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s a quick summary of how I got SDL to work on Android. First off, this is
my setup:</p>

<ul>
<li>Android NDK r6</li>
<li>Android SDK r12</li>
<li>SDL-2.0.0-6284</li>
</ul>


<p>The first piece of bad news is that Android support is only in the upcoming SDL
2.0, not in the current stable 1.2. Although I&rsquo;m sure it could be backported,
SDL2 is pretty similar, so I decided to upgrade. The README.android file does a
pretty good job of explaining the steps, but there were a few kinks:</p>

<!-- more -->


<ol>
<li>in jni/src/Android.mk, the line LOCAL_SHARED_LIBRARIES := SDL is wrong. That
needs to be SDL2</li>
<li>Java didn&rsquo;t like that all the classes in src/org/libsdl/app/SDLActivity.java
are in one file. I had to make separate SDLMain.java and SDLSurface.java files.</li>
<li>In the onTouch method, I get a compile error (cannot find symbol)
for event.getActionIndex() and event.getActionMasked(), so I commented out some
of that code and haven&rsquo;t used touch events yet. I still need to crack this nut.</li>
<li>Because my SDK is installed in C:\Google\android-sdk-windows, I had to edit
local.properties to say <code>sdk.dir=/Google/android-sdk-windows</code></li>
</ol>


<p>Now I have one of the SDL test app running on my phone, drawing rectangles. Time
to see if I can do something useful with that!</p>

<p><img class="<a" src="href="http://25.media.tumblr.com/tumblr_lzpph2hil01qhsievo1_1280.jpg">http://25.media.tumblr.com/tumblr_lzpph2hil01qhsievo1_1280.jpg</a>" title="&ldquo;Not bad for a single morning. This is what holidays are for!&rdquo; &ldquo;Screenshot&rdquo;" ></p>
]]></content>
  </entry>
  
</feed>
